{"version":3,"sources":["../../src/Fields/Field.js"],"names":["ScrollElement","Element","Field","props","context","setError","setState","isValid","reset","onChange","getFieldName","node","value","changeValidation","data","defaultValue","typeName","state","entityField","Error","className","labelClassName","fieldName","v4","name","fieldProps","children","disableLabel","UUID","getFieldUUID","label","otherProps","omit","attrs","Object","assign","id","ref","getFieldClasses","type","renderLabel","isLabelEnabled","getLabelClasses","createElement","getContainerClasses","containerClassName","registerEntityField","getRegisteredFields","registerTypeFields","nextProps","Component","propTypes","PropTypes","string","bool","defaultProps","contextTypes","object","func","onSubmit"],"mappings":"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","file":"Field.js","sourcesContent":["import React from 'react';\nimport uuid from 'uuid';\nimport _ from 'lodash';\nimport Scroll from 'react-scroll';\nimport classnames from 'classnames';\n\nconst ScrollElement = Scroll.Element;\n\nclass Field extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    let value;\n    if (context && props) {\n      value = context.data[this.getFieldName()] || props.value || props.defaultValue || '';\n    }\n\n    this.typeName;\n    this.value = value;\n    this.state = {\n      isValid: true,\n      value\n    };\n  }\n\n  getFieldName() {\n    if (!this.props.entityField) {\n      throw Error('entityField is required!');\n    }\n    return this.props.entityField;\n  }\n\n  getFieldClasses() {\n    return classnames('speck-form__field__input',\n      this.props.className, {\n        [`${this.props.className}--error`]: !this.state.isValid\n      }\n    );\n  }\n\n  getLabelClasses() {\n    return classnames('speck-form__label',\n      this.props.labelClassName\n    );\n  }\n\n  getFieldUUID() {\n    const fieldName = this.getFieldName();\n    return `speck-form__id--${fieldName}-${uuid.v4()}`;\n  }\n\n  renderField(name, fieldProps, children) {\n    const { disableLabel } = this.context;\n    const UUID = this.getFieldUUID();\n    const label = fieldProps.label;\n    const { defaultValue } = this.props;\n    const fieldName = this.getFieldName();\n\n    const otherProps = _.omit(fieldProps, [\n      'label',\n      'children',\n      'className',\n      'entityField',\n      'labelClassName',\n      'datetime-local',\n      'changeValidation',\n      'containerClassName'\n    ]);\n\n    const attrs = Object.assign({\n      id: UUID,\n      ref: (node) => (this.node = node),\n      name: fieldName,\n      className: this.getFieldClasses(),\n      defaultValue: this.state.value || defaultValue,\n      onChange: this.onChange\n    }, otherProps);\n\n    this.typeName = attrs.type;\n\n    let renderLabel;\n    const isLabelEnabled = (label && !disableLabel);\n    if (isLabelEnabled) {\n      renderLabel = (\n        <label htmlFor={attrs.id} className={this.getLabelClasses()}>\n          {label}\n        </label>\n      );\n    }\n\n    if (fieldProps.type === 'hidden') {\n      return React.createElement(name, attrs, children);\n    }\n\n    return (\n      <ScrollElement name={this.getFieldName()}>\n        <section className={this.getContainerClasses()}>\n          {renderLabel}\n          {React.createElement(name, attrs, children)}\n        </section>\n      </ScrollElement>\n    );\n  }\n\n  getContainerClasses() {\n    return classnames('speck-form__container',\n      this.props.containerClassName,\n      `speck-form__container--${this.getFieldName()}`, {\n        'has-error': !this.state.isValid\n      });\n  }\n\n  setError = () => {\n    this.setState({isValid: false});\n  }\n\n  reset = () => {\n    this.setState({isValid: true});\n  }\n\n  onChange = () => {\n    const { onChange } = this.context;\n    onChange(this.getFieldName(), this.node.value, this.props.changeValidation);\n  }\n\n  componentDidMount() {\n    const {\n      registerEntityField,\n      getRegisteredFields,\n      registerTypeFields\n    } = this.context;\n\n    let value;\n    if (this.node) {\n      value = this.node.value || this.node.defaultValue;\n    }\n\n    registerEntityField(this.getFieldName(), value, {\n      reset: this.reset,\n      setError: this.setError\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { onChange } = this.context;\n    if (this.typeName === 'hidden') {\n      onChange(this.getFieldName(), nextProps.value, this.props.changeValidation);\n    }\n  }\n}\n\nField.propTypes = {\n  className: React.PropTypes.string,\n  entityField: React.PropTypes.string,\n  labelClassName: React.PropTypes.string,\n  changeValidation: React.PropTypes.bool,\n  containerClassName: React.PropTypes.string\n};\n\nField.defaultProps = {\n  changeValidation: false\n};\n\nField.contextTypes = {\n  data: React.PropTypes.object,\n  onChange: React.PropTypes.func,\n  onSubmit: React.PropTypes.func,\n  disableLabel: React.PropTypes.bool,\n  registerEntityField: React.PropTypes.func\n};\n\nexport default Field;\n"]}