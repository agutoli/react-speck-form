{"version":3,"sources":["../../src/Fields/Field.js"],"names":["Field","props","context","setError","setState","isValid","reset","onChange","getFieldName","node","value","data","typeName","state","entityField","Error","className","containerClassName","fieldName","v4","name","fieldProps","children","disableLabel","UUID","getFieldUUID","label","defaultValue","otherProps","omit","attrs","Object","assign","id","ref","getFieldClasses","type","renderLabel","isLabelEnabled","getLabelClasses","getContainerClasses","createElement","registerEntityField","getRegisteredFields","registerTypeFields","Component","propTypes","PropTypes","string","labelClassName","contextTypes","object","func","onSubmit","bool"],"mappings":"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","file":"Field.js","sourcesContent":["import React from 'react';\nimport uuid from 'uuid';\nimport _ from 'lodash';\nimport classnames from 'classnames';\n\nclass Field extends React.Component {\n  constructor(props, context) {\n    super(props);\n\n    let value;\n    if (context && props) {\n      value = context.data[this.getFieldName()] || '';\n    }\n\n    this.typeName;\n\n    this.value = value;\n    this.state = {\n      isValid: true,\n      value\n    };\n  }\n\n  getFieldName() {\n    if (!this.props.entityField) {\n      throw Error('entityField is required!');\n    }\n    return this.props.entityField;\n  }\n\n  getFieldClasses() {\n    return classnames(this.props.className, 'speck-form__field__input');\n  }\n\n  getLabelClasses() {\n    return classnames('speck-form__label',\n      this.props.containerClassName\n    );\n  }\n\n  getFieldUUID() {\n    const fieldName = this.getFieldName();\n    return `speck-form__id--${fieldName}-${uuid.v4()}`;\n  }\n\n  renderField(name, fieldProps, children) {\n    const { disableLabel } = this.context;\n    const UUID = this.getFieldUUID();\n    const label = fieldProps.label;\n    const { defaultValue } = this.props;\n    const fieldName = this.getFieldName();\n\n    const otherProps = _.omit(fieldProps, [\n      'label',\n      'children',\n      'className',\n      'entityField',\n      'labelClassName',\n      'datetime-local',\n      'containerClassName'\n    ]);\n\n    const attrs = Object.assign({\n      id: UUID,\n      ref: (node) => (this.node = node),\n      name: fieldName,\n      className: this.getFieldClasses(),\n      defaultValue: this.state.value || defaultValue,\n      onChange: this.onChange\n    }, otherProps);\n\n    this.typeName = attrs.type;\n\n    let renderLabel;\n    const isLabelEnabled = (label && !disableLabel);\n    if (isLabelEnabled) {\n      renderLabel = (\n        <label htmlFor={attrs.id} className={this.getLabelClasses()}>\n          {label}\n        </label>\n      );\n    }\n\n    return (\n      <section className={this.getContainerClasses()}>\n        {renderLabel}\n        {React.createElement(name, attrs, children)}\n      </section>\n    );\n  }\n\n  getContainerClasses() {\n    return classnames('speck-form__container',\n      this.props.containerClassName,\n      `speck-form__container--${this.getFieldName()}`, {\n        'speck-form__container--error': !this.state.isValid\n      });\n  }\n\n  setError = () => {\n    this.setState({isValid: false});\n  }\n\n  reset = () => {\n    this.setState({isValid: true});\n  }\n\n  onChange = () => {\n    const { onChange } = this.context;\n    onChange(this.getFieldName(), this.node.value);\n  }\n\n  componentDidMount() {\n    const {\n      registerEntityField,\n      getRegisteredFields,\n      registerTypeFields\n    } = this.context;\n\n    let value;\n    if (this.node) {\n      value = this.node.value || this.node.defaultValue;\n    }\n\n    registerEntityField(this.getFieldName(), value, {\n      reset: this.reset,\n      setError: this.setError\n    });\n  }\n}\n\nField.propTypes = {\n  className: React.PropTypes.string,\n  entityField: React.PropTypes.string,\n  labelClassName: React.PropTypes.string,\n  containerClassName: React.PropTypes.string\n};\n\nField.contextTypes = {\n  data: React.PropTypes.object,\n  onChange: React.PropTypes.func,\n  onSubmit: React.PropTypes.func,\n  disableLabel: React.PropTypes.bool,\n  registerEntityField: React.PropTypes.func\n};\n\nexport default Field;\n"]}