{"version":3,"sources":["../src/SpeckForm.js"],"names":["scroller","SubmitField","SelectField","TextareaField","CustomField","TextField","RadioField","CheckboxField","RangeField","ColorField","EmailField","NumberField","PasswordField","DateField","DatetimeLocalField","inputFieldFactory","SpeckFormScaffold","props","entity","console","warn","_Entity","typeName","SCHEMA","fields","prop","validator","info","label","required","push","getComponentByType","name","options","entityField","generateScaffoldForm","Component","SpeckForm","entityValidator","_errorListeners","_data","data","disableLabel","registerEntityField","defaultValue","callbacks","setValue","isValid","enableSubmit","disableSubmit","onChange","value","changeValidation","updateValue","instance","resetField","schema","validate","validateEntityField","onSubmit","smoothScrollingErrors","errors","Object","assign","duration","delay","smooth","offset","smoothScrollingErrorsOptions","scrollTo","valid","onErrors","resetFields","showWarnings","setFieldsErrors","setFieldError","btnSubmit","reset","setError","keys","forEach","className","children","childContextTypes","PropTypes","object","func","bool","propTypes","preventSubmit","string","isRequired","any","defaultProps"],"mappings":"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","file":"SpeckForm.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport Scroll from 'react-scroll';\nimport classnames from 'classnames';\nimport TypeDiscoverer from './Types/TypeDiscoverer';\n\nconst scroller = Scroll.scroller;\n\n// button\nexport SubmitField from './Fields/SubmitField';\n\nimport Select from './Fields/SelectField';\nexport const SelectField = Select;\n\nexport TextareaField from './Fields/TextareaField';\nexport CustomField from './Fields/CustomField';\n\n// common Input types\nimport InputFieldFactory from './Fields/InputFieldFactory';\n\nexport const TextField = InputFieldFactory('text');\nexport const RadioField = InputFieldFactory('radio');\nexport const CheckboxField = InputFieldFactory('checkbox');\nexport const RangeField = InputFieldFactory('range');\nexport const ColorField = InputFieldFactory('color');\nexport const EmailField = InputFieldFactory('email');\nexport const NumberField = InputFieldFactory('number');\nexport const PasswordField = InputFieldFactory('password');\nexport const DateField = InputFieldFactory('date');\n\nexport const DatetimeLocalField = InputFieldFactory('datetime-local');\n\n// factory\nexport const inputFieldFactory = InputFieldFactory;\n\nexport  class SpeckFormScaffold extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!props.entity) {\n      console.warn('you should specify a entity!');\n    }\n    this._Entity = props.entity;\n  }\n\n  getComponentByType(typeName, props) {\n    switch (typeName) {\n      case 'string':\n        return <TextField {...props} />;\n        break;\n      case 'number':\n        return <NumberField {...props} />;\n        break;\n      case 'oneOf':\n        return <Select {...props} />;\n        break;\n      default:\n        return <div>{typeName}</div>\n    }\n  }\n\n  generateScaffoldForm() {\n    const SCHEMA = this._Entity.SCHEMA;\n    let fields = [];\n    for(let prop in SCHEMA) {\n      const validator = SCHEMA[prop];\n      const info = TypeDiscoverer(validator);\n      const label = (info.required) ? `${prop}: *` : `${prop}:`;\n      fields.push(this.getComponentByType(info.name, {\n        label: label,\n        options: info.options,\n        entityField: prop\n      }));\n    }\n    return fields;\n  }\n\n  render() {\n    return (\n      <div>{this.generateScaffoldForm()}</div>\n    );\n  }\n}\n\nclass SpeckForm extends React.Component {\n  constructor(props) {\n    super(props);\n    if (!props.entityValidator) {\n      console.warn('you should specify a entityValidator!');\n    }\n\n    this._errorListeners = {};\n    this._data = props.data || {};\n    this._Entity = props.entityValidator;\n  }\n\n  getChildContext() {\n    return {\n      data: this._data,\n      disableLabel: this.props.disableLabel,\n      registerEntityField: (entityField, defaultValue, callbacks) => {\n        this.setValue(entityField, defaultValue);\n        this._errorListeners[entityField] = callbacks;\n\n        if (this.isValid()) {\n          this.enableSubmit();\n        } else {\n          this.disableSubmit();\n        }\n      },\n      onChange: (entityField, value, changeValidation) => {\n        this.updateValue(entityField, value);\n\n        const instance = new this._Entity(this._data);\n        this.resetField(entityField, instance.schema);\n\n        if (this.props.changeValidation) {\n          this.validate();\n          return;\n        }\n\n        if (changeValidation) {\n          this.validateEntityField(entityField);\n          return;\n        }\n      },\n      onSubmit: () => {\n        if (this.validate(this._data)) {\n          this.props.onSubmit(this._data);\n          return;\n        }\n\n        if (this.props.smoothScrollingErrors) {\n          const instance = new this._Entity(this._data);\n          for(let entityField in this._data) {\n            if ((entityField in instance.errors)) {\n              const options = Object.assign({\n                duration: 300,\n                delay: 100,\n                smooth: true,\n                offset: -50\n              }, this.props.smoothScrollingErrorsOptions);\n              scroller.scrollTo(entityField, options);\n              break;\n            }\n          }\n        }\n      }\n    };\n  }\n\n  setValue(entityField, value) {\n    if (!this._data[entityField]) {\n      this._data[entityField] = value;\n    }\n  }\n\n  updateValue(entityField, value) {\n    this._data[entityField] = value;\n  }\n\n  isValid() {\n    return new this._Entity(this._data).valid;\n  }\n\n  validate() {\n    const { onErrors } = this.props;\n\n    const instance = new this._Entity(this._data);\n    this.resetFields(instance.schema);\n\n    if (!instance.valid) {\n      onErrors(instance.errors);\n      this.showWarnings(instance.errors);\n      this.setFieldsErrors(instance.errors);\n      this.disableSubmit();\n      return false;\n    }\n\n    this.enableSubmit();\n    return true;\n  }\n\n  validateEntityField(entityField) {\n    const { onErrors } = this.props;\n\n    const instance = new this._Entity(this._data);\n    this.resetField(entityField, instance.schema);\n\n    if (!instance.valid) {\n      onErrors(instance.errors);\n      this.showWarnings(instance.errors);\n      this.setFieldError(entityField, instance.errors);\n      this.disableSubmit();\n      return false;\n    }\n\n    this.enableSubmit();\n    return true;\n  }\n\n  enableSubmit() {\n    if (this._errorListeners.btnSubmit) {\n      this._errorListeners.btnSubmit.reset();\n    }\n  }\n\n  disableSubmit() {\n    if (this._errorListeners.btnSubmit) {\n      this._errorListeners.btnSubmit.setError();\n    }\n  }\n\n  setFieldError(entityField, errors) {\n    if ((entityField in errors)) {\n      this._errorListeners[entityField].setError();\n    }\n  }\n\n  setFieldsErrors(errors) {\n    return Object.keys(errors).forEach((entityField) => {\n      if ((entityField in this._errorListeners)) {\n        this._errorListeners[entityField].setError();\n      }\n    });\n  }\n\n  resetField(entityField, schema) {\n    if ((entityField in this._errorListeners)) {\n      this._errorListeners[entityField].reset();\n    }\n  }\n\n  resetFields(schema) {\n    return Object.keys(schema).forEach((entityField) => {\n      if ((entityField in this._errorListeners)) {\n        this._errorListeners[entityField].reset();\n      }\n    });\n  }\n\n  showWarnings(errors) {\n    if (!this.props.showWarnings) {\n      return null;\n    }\n\n    return Object.keys(errors).forEach((entityField) => {\n      if (!(entityField in this._data)) {\n        console.warn(`You should create ${entityField} field! (required)`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"speck-form\">\n        <form className={classnames(this.props.className)}>\n          {this.props.children}\n        </form>\n      </div>\n    );\n  }\n}\n\nSpeckForm.childContextTypes = {\n  data: React.PropTypes.object,\n  onChange: React.PropTypes.func,\n  onSubmit: React.PropTypes.func,\n  disableLabel: React.PropTypes.bool,\n  registerEntityField: React.PropTypes.func\n};\n\nSpeckForm.propTypes = {\n  preventSubmit: React.PropTypes.bool,\n  showWarnings: React.PropTypes.bool,\n  disableLabel: React.PropTypes.bool,\n  data: React.PropTypes.object,\n  className: React.PropTypes.string,\n  entityValidator: React.PropTypes.func.isRequired,\n  changeValidation: React.PropTypes.bool.isRequired,\n  children: React.PropTypes.any,\n  onSubmit: React.PropTypes.func,\n  onErrors: React.PropTypes.func,\n  smoothScrollingErrors: React.PropTypes.bool,\n  smoothScrollingErrorsOptions: React.PropTypes.object\n};\n\nSpeckForm.defaultProps = {\n  preventSubmit: true,\n  showWarnings: true,\n  disableLabel: false,\n  changeValidation: false,\n  smoothScrollingErrors: false,\n  smoothScrollingErrorsOptions: {},\n  onSubmit: () => {},\n  onErrors: () => {},\n  data: {}\n};\n\nexport default SpeckForm;\n"]}